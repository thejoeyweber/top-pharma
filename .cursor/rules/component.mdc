---
description: 
globs: apps/*/components/**/*.tsx,packages/ui/**/*.tsx
alwaysApply: false
---
---
description: Standards for developing, extending, and consuming UI components.
---

# Component Development (`packages/ui`)
- **Extension Hierarchy:** `ui` (base Shadcn) → `elements` → `patterns` → `features` → `layouts`.
- **Do NOT** modify Shadcn source files in `ui`; extend instead.
- **Icons:** Use `lucide-react` for all icons (import individually to enable tree‑shaking).
- **Visual Spacing:** Separate major HTML sections with **one blank line** for readability.
- **Props:** Define via TypeScript interfaces; use clear, descriptive names.
- **Exports:** Named exports only.

### File & Folder Naming
| Context | Convention |
|---------|------------|
| Shared components in `packages/ui` | **PascalCase** (`Card.tsx`) matching Shadcn defaults. |
| Route‑specific or one‑off components (`apps/*/app/.../_components`) | **kebab‑case** (`loading-skeleton.tsx`). |

### State & Data Flow
- Fetch data in Server Components; pass as props to Client Components.
- Keep state local; lift using context or Zustand only when necessary.

### Accessibility
- Prefer semantic elements; ensure keyboard operability.
- Verify contrast with WCAG AA+.

# Reference Implementation
- Check `/_reference/components` for implementation patterns and examples
- Adapt patterns to match project architecture and shadcn/UI conventions
- See `reference-implementation.mdc` for detailed guidance on using references